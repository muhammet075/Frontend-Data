<article>

<section style="text-align: center;">
    <h1>Inwoners van Nederland</h1>
    <h2>2010 t/m 2018</h2>
    <div id="d3-container"/>
</section>

  <section>
    <%for (let i = 0; i < nieuwData.length; i++) {%>
    <ul>
      <li><%= JSON.stringify(nieuwData[i].year) %></li>
      <li><%= nieuwData[i].value %></li>
    </ul>
    <%}%>
  </section>

  <section>
    <h2>Circkel schaal</h2>
    <svg width="1500" height="80">
      <g id="wrapper" transform="translate(40, 40)"></g>
    </svg>
  </section>

</article>



<script type="text/javascript">
        var linearScale = d3.scaleLinear().domain([16000000, 17300000]).range([0, 1000]);
        var sqrtScale = d3.scaleSqrt().domain([16000000, 17300000]).range([0, 25]);
        var myData = [<%for (i = 49; i < nieuwData.length; i++) {%><%= nieuwData[i].value %>,<%}%>];

       console.log(myData);

         d3.select("#wrapper")
          .selectAll("circle")
          .data(myData)
          .join("circle")
          .attr("r", function (d) {
            return sqrtScale(d);
          })
          .attr("cx", function (d) {
            return linearScale(d);
          });


          const data = [
  <%for (i = 50; i < nieuwData.length; i++) {%>
      { jaar: '<%= nieuwData[i].year %>', inwoners: <%= nieuwData[i].value %> },
  <%}%>
    ];
    console.log(data)


    const width = 1600;
    const height = 700;
    const margin = { top: 50, bottom: 50, left: 50, right: 50 };

    const svg = d3.select('#d3-container')
      .append('svg')
      .attr('width', width - margin.left - margin.right)
      .attr('height', height - margin.top - margin.bottom)
      .attr("viewBox", [0, 0, width, height]);

    const x = d3.scaleBand()
      .domain(d3.range(data.length))
      .range([margin.left, width - margin.right])
      .padding(0.1)

    const y = d3.scaleLinear()
      .domain([16000000, 17300000])
      .range([height - margin.bottom, margin.top])

    svg
      .append("g")
      .attr("fill", 'blue')
      .selectAll("rect")
      .data(data.sort((a, b) => d3.descending(a.inwoners, b.inwoners)))
      .join("rect")
        .attr("x", (d, i) => x(i))
        .attr("y", d => y(d.inwoners))
        .attr('title', (d) => d.inwoners)
        .attr("class", "rect")
        .attr("height", d => y(0) - y(d.inwoners))
        .attr("width", x.bandwidth());

    function yAxis(g) {
      g.attr("transform", `translate(${margin.left}, 0)`)
        .call(d3.axisLeft(y).ticks(null, data.format))
        .attr("font-size", '20px')
    }

    function xAxis(g) {
      g.attr("transform", `translate(0,${height - margin.bottom})`)
        .call(d3.axisBottom(x).tickFormat(i => data[i].jaar))
        .attr("font-size", '20px')
    }
    svg.append("g").call(xAxis);
    svg.append("g").call(yAxis);
    svg.node();
</script>
